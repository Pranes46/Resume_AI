PRANES GOPALAN VENKATESH
Texas • +1 (551) 786-1731 • pranesgvenkatesh20@gmail.com • LinkedIn • GitHub • Tableau
Experienced AI & Data Science Engineer with expertise in large language models (LLMs), RAG pipelines, and prompt evaluation frameworks. Skilled in orchestrating LangChain and LangGraph-based AI workflows using FastAPI, deployed across cloud-native stacks. Strong foundation in Python, NLP (NLTK, Hugging Face, SpaCy), and data analytics with tools like Tableau, Power BI, and scikit-learn. Adept at developing scalable ML solutions and embedding LLMs into real-world applications with structured evaluation, fine-tuning, and enterprise-grade reliability.
SKILLS
Programming Languages: Python, R, JavaScript, SQL
Frameworks and Libraries: LangChain, LangGraph, PySpark, TensorFlow, scikit-learn, NLTK, SpaCy, Plotly, Seaborn, Matplotlib, Pandas, NumPy, FastAPI, React.js, Tailwind CSS, Node.js, Express.js,
ML & AI Toolkits: OpenAI API (GPT-3.5, GPT-4), Gemini 2.0 API, Hugging Face Transformers, Evaluate, Manual Prompt Evaluation, RAG Pipelines, Prompt Tuning, LangSmith
Databases and Caching: PostgreSQL, MySQL, MongoDB, Firebase, Snowflake, Pinecone, FAISS, AWS S3, Google Cloud Storage
DevOps and CI/CD: Apache Airflow, GitHub Actions, Docker, Render, Vercel, Heroku
Cloud and Serverless Services: AWS Lambda, Google Firebase, Office 365, Google Workspace, Power Automate
Testing and Evaluation: Hugging Face Evaluate, scikit-learn metrics, manual evaluation frameworks for LLMs (prompt tuning, human feedback, semantic relevance scoring)
Tools and Platforms: Git, Postman, Streamlit, FastAPI, VS Code, GitHub, Tableau, Power BI, Figma, Excel (macros, pivot tables)
PROFESSIONAL EXPERIENCE
Highbrow - Turing, Remote, United States	Apr 2024 – Present
Data Scientist 
Led RLHF (Reinforcement Learning from Human Feedback) efforts with Google as a client, enhancing LLM alignment through iterative feedback loops and behavior tuning for safe, high-quality outputs.
Developed production-grade LangChain and LangGraph pipelines for prompt routing, semantic query understanding, and Retrieval-Augmented Generation (RAG), powering dynamic, context-aware LLM orchestration.
Designed and executed structured prompt evaluations, systematically testing variations for accuracy, relevance, and safety to drive empirical improvements in model performance and response quality.
Used internal labeling tool to assess thousands of LLM completions, ranking outputs and providing comparative judgments to inform reward modeling, prompt tuning, and fine-tuning cycles.
Contributed to large-scale model benchmarking and dataset curation, analyzing response patterns across tasks to support alignment, model calibration, and annotation-guided training workflows.
Collaborated cross-functionally with product and engineering teams to define evaluation criteria, build scalable testing frameworks, and document model behaviors for downstream LLM applications.
Lorhan Corporation, New Jersey, United States	Aug 2023 – Apr 2024
Data Analyst
Built and maintained real-time dashboards using Tableau and Power BI, providing key business insights to internal teams and leadership for strategic decision-making.
Improved data retrieval efficiency by 5% by optimizing PostgreSQL queries; evaluated MySQL and MongoDB to support varied internal data needs.
Automated recurring data processing tasks in Excel using Pivot Tables, LOOKUP functions, and scripting, reducing manual workload by 40%.
Contributed to internal analytics tooling and pre-sales enablement efforts by aligning data infrastructure with evolving client-facing solution requirements.
Collaborated with backend engineers and product leads to deploy LLM components on Google Cloud, ensuring seamless integration with internal systems and maintaining low-latency inference.
ACADEMIC PROJECTS
Resume AI Chatbot | FastAPI, LangChain, OpenAI, FAISS, React.js, Tailwind CSS, Render
Developed an AI assistant that answers recruiter questions using Retrieval-Augmented Generation (RAG) with LangChain, FAISS, and OpenAI embeddings.
Deployed a FastAPI backend on Render and built dual frontend using React.js for interactive user experience.
Hotel Review Sentiment Analysis | Python, Selenium, NLTK, Scikit-learn, Gensim, VADER, Doc2Vec, TF-IDF, Matplotlib, Seaborn
Extracted customer reviews and ratings from Airbnb using Selenium and labeled them as positive or negative based on rating thresholds.
Performed advanced NLP preprocessing and feature engineering (VADER sentiment, TF-IDF, Doc2Vec) to train classification models for binary sentiment prediction.
Twitter Data ETL Pipeline with Apache Airflow and AWS Integration | Python, Apache Airflow, AWS EC2/S3
Built an automated ETL pipeline to extract real-time Twitter data via API calls, orchestrated using Apache Airflow for scheduled processing.
Leveraged AWS EC2 for compute efficiency and stored processed data on S3, enabling scalable downstream analytics and ML integration.
King County Real Estate Data Analysis and Visualization | Excel, Tableau
Cleaned and validated real estate sales data in Excel to ensure dataset accuracy and consistency prior to visualization.
Developed interactive Tableau dashboards to analyze price trends, sales distribution, and investment hotspots, enabling data-driven decision-making in the Washington housing market.
EDUCATION
Stevens Institute of Technology, Hoboken, United States	Aug 2021 – May 2023
Master of Science in Data Science, GPA: 3.8/4.0
Relevant Coursework: Applied Machine Learning, Deep Learning, Web Mining, Big Data, DBMS, Time Series
PSG College of Technology, Tamil Nadu, India	 Jun 2018 – May 2021
Bachelor of Engineering in Electronics and Communication, GPA: 7.5/10.0
Relevant Coursework: Relational Database management System, Data Structures and Algorithms, IT & Software Fundamentals
CERTIFICATION
AWS Certified Cloud Practitioner, UDEMY Data Science Bootcamp



How I built this AI: I built a chatbot using the Retrieval-Augmented Generation (RAG) pipeline to enable context-aware responses grounded in custom documents. I began by loading the relevant documents and splitting them into coherent chunks using `RecursiveCharacterTextSplitter`, which ensures semantic integrity by breaking the text along logical boundaries like paragraphs and sentences. These chunks were then embedded using OpenAI’s `text-embedding-ada-002` model to generate dense vector representations that capture semantic meaning. I stored these vectors in a FAISS (Facebook AI Similarity Search) vector store, which was ideal for this small-scale project due to its in-memory speed and efficient similarity search capabilities. When a user submits a query, the system retrieves the most relevant document chunks from FAISS and passes them, along with the query, to GPT-3.5 Turbo for final answer synthesis. This approach combines precise retrieval with the natural language generation capabilities of the LLM, ensuring the chatbot produces accurate, context-rich responses tailored to the user's input.

If asked anything about how can i replicate this and stuff please elaboarte on the topics which i used to create it and provide a guide.